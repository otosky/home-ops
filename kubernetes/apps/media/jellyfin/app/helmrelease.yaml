apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  interval: 5m
  values:
    controllers:
      main:
        type: deployment
        containers:
          main:
            image:
              repository: docker.io/jellyfin/jellyfin
              tag: 10.10.7@sha256:7ae36aab93ef9b6aaff02b37f8bb23df84bb2d7a3f6054ec8fc466072a648ce2
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 200m
                memory: 1000Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 6000Mi
        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              #   # Hardware acceleration using an Intel iGPU w/ QuickSync
              #   # These IDs below should be matched to your `video` and `render` group on the host
              #   # To obtain those IDs run the following grep statement on the host:
              #   # $ cat /etc/group | grep "video\|render"
              - 39
              - 998
              - 44
              - 100
              - 103
              - 104
              - 105
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: 10.66.1.103
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: &port 8096
    route:
      main:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
          - name: internal
            namespace: kube-system
            sectionName: https
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        storageClass: longhorn-ssd
        size: 100Gi
      media:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: media
        globalMounts:
          - path: /storage/media
            subPath: media/
      transcode:
        enabled: true
        type: emptyDir
