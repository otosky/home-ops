{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home-Ops","text":"### Home Operations :sailboat:  _Managed with Flux, Renovate, and GitHub Actions_ :robot:"},{"location":"#overview","title":"\ud83d\udcd6 Overview","text":"<p>This is a mono repository for my home infrastructure and Kubernetes cluster implementing Infrastructure as Code (IaC) and GitOps practices using tools like Kubernetes, Flux, Renovate and GitHub Actions.</p>"},{"location":"#kubernetes","title":"\u26f5 Kubernetes","text":"<p>My Kubernetes cluster is built upon bare-metal nodes running Talos, with Longhorn providing hyper-converged block storage. A separate TrueNAS system also exists externally for NFS storage - mostly for media and backups.</p>"},{"location":"#core-components","title":"Core Components","text":"<ul> <li>flux: Manages the cluster state using GitOps</li> <li>longhorn: Provides distributed block storage for stateful applications</li> <li>renovate: Keeps application dependencies up-to-date</li> </ul>"},{"location":"#gitops","title":"GitOps","text":"<p>Flux watches this Git repository and makes the appropriate changes to the cluster based on the YAML manifests in the kubernetes directory. </p> <p>Renovate also watches this Git repository and creates pull requests when it finds updates to Docker images, Helm charts, and other dependencies.</p>"},{"location":"#directories","title":"Directories","text":"<p>This Git repository contains the following directories under kubernetes.</p> <pre><code>\ud83d\udcc1 bootstrap       # Initial installation components\n\ud83d\udcc1 kubernetes      # Kubernetes cluster defined as code\n\u251c\u2500\ud83d\udcc1 apps          # Apps deployed into cluster grouped by namespace\n\u2514\u2500\ud83d\udcc1 flux          # Main Flux configuration of repository\n</code></pre>"},{"location":"#hardware","title":"\ud83d\udd27 Hardware","text":"<p>All hardware was cobbled together second-hand from Craigslist or eBay.</p> Device Count OS Disk Size Data Disk Size NIC Operating System Purpose Lenovo ThinkCentre M720q 2 500GB NVMe - - Fedora Kubernetes Control Plane Lenovo ThinkCentre M920q 1 500GB NVMe - - Fedora Kubernetes Control Plane Dell OptiPlex 3070 SFF (9th-gen Intel i5) 3 250GB SSD 1x 1TB SSD; 1x 1TB NVMe Mellanox ConnectX-3 10G Fedora Kubernetes Agent Custom NAS (Fractal Design Node 304) 1 - - Mellanox ConnectX-3 10G Unraid NAS Lenovo ThinkCentre M720q 1 - - - VyOS Router Brocade ICX6450 1 - - - - Switch TP-Link EAP650 1 - - - - WiFi AP Unifi Flex-Mini 2 - - - - Switch (per room) Raspberry Pi 4B w/ HiFiBerry DAC2 Pro 1 - - - - Volumio"},{"location":"#gratitude-and-thanks","title":"\ud83e\udd1d Gratitude and Thanks","text":"<p>Standing on the shoulders of giants, this cluster configuration is heavily inspired by the excellent work of the k8s-at-home community and more specifically:</p> <ul> <li>onedr0p/home-ops</li> <li>bjw-s/home-ops</li> <li>flux-cluster-template</li> </ul> <p>Be sure to check out the k8s-at-home Discord!</p>"},{"location":"faq/placeholder/","title":"FAQ","text":""},{"location":"faq/placeholder/#general","title":"General","text":""},{"location":"faq/placeholder/#how-do-i-force-reconcile-flux-from-main","title":"How do I force reconcile <code>flux</code> from main?","text":"<p>execute</p> <pre><code>flux reconcile source git home-ops-kubernetes\n</code></pre>"},{"location":"faq/placeholder/#longhorn","title":"Longhorn","text":""},{"location":"faq/placeholder/#how-do-i-restore-volumes-from-longhorn-backups","title":"How do I restore volumes from Longhorn backups?","text":"<ol> <li>Scale any deployments or statefulsets connected to volume to 0</li> <li>Delete the volume in Longhorn</li> <li>In the \"Backup\" tab, find the PVC associated with the workload you want to restore</li> <li>Select the checkbox for that PVC and hit the \"Restore Latest Backup\" button</li> <li>Scale the deployments or statefulsets connected to volume back to previous count.</li> </ol>"},{"location":"faq/placeholder/#how-do-i-set-up-new-disks-in-longhorn","title":"How do I set up new disks in Longhorn?","text":"<p>Note</p> <p>You will need to set up the disk to automount on the host by adding an entry to /etc/fstab. For k3s, I've settled on a path convention of <code>/var/lib/longhorn-int-&lt;ssd|nvme&gt;&lt;number&gt;/</code> where number is a count starting at 1.</p> <ol> <li>Under the \"Node\" tab, find the kubernetes node associated with the disks you'd like to add.</li> <li>Select it and click \"Edit Node\"</li> <li>Click \"Add Disk\" and populate the following:</li> <li>Add a tag; either <code>ssd</code> or <code>nvme</code></li> <li>Give the disk a name of the form <code>internal-&lt;ssd|nvme&gt;-&lt;number&gt;</code></li> <li>Set the mount path of the disk from the prerequisite step.</li> <li>Set \"Scheduling\" to \"Enable\"</li> </ol>"}]}